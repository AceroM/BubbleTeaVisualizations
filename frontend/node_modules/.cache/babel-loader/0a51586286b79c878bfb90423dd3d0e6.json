{"ast":null,"code":"var _jsxFileName = \"/Users/miguel/DataVisualization/BubbleTeaVisualizations/backend/frontend/src/components/BubbleTeaMap.js\";\nimport React, { Component } from 'react';\nimport Heatmap from './Heatmap';\nimport queryString from 'query-string';\n\nconst axios = require('axios'); // const { YELP_TOKEN, mapsKey } = require(\"../config.json\");\n\n\nclass BubbleTeaMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // default lat lng to NYC BABY\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    const values = queryString.parse(window.location.search);\n    let data = [];\n    fetch(\"/yelp?lat=\".concat(values.lat, \"&lng=\").concat(values.lng)).then(res => res.json()).then(businesses => {\n      for (let i = 0; i < businesses.length; i++) {\n        const latLng = {\n          lat: businesses[i].coordinates.latitude,\n          lng: businesses[i].coordinates.longitude\n        };\n        data.push(latLng);\n      }\n\n      this.setState({\n        data: data\n      });\n    });\n  }\n\n  render() {\n    const values = queryString.parse(window.location.search);\n    const data = this.state.data;\n    return !!data.length ? React.createElement(Heatmap, {\n      center: {\n        lat: values.lat,\n        lng: values.lng\n      },\n      zoom: 12,\n      positions: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      style: {\n        height: '1000px',\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \" Loading \"));\n  }\n\n}\n\nexport default BubbleTeaMap;","map":{"version":3,"sources":["/Users/miguel/DataVisualization/BubbleTeaVisualizations/backend/frontend/src/components/BubbleTeaMap.js"],"names":["React","Component","Heatmap","queryString","axios","require","BubbleTeaMap","constructor","props","state","data","componentDidMount","values","parse","window","location","search","fetch","lat","lng","then","res","json","businesses","i","length","latLng","coordinates","latitude","longitude","push","setState","render","height","display","justifyContent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,cAAxB;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB,C,CACA;;;AAEA,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AACnCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACX;AACAC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,MAAM,GAAGT,WAAW,CAACU,KAAZ,CAAkBC,MAAM,CAACC,QAAP,CAAgBC,MAAlC,CAAf;AACA,QAAIN,IAAI,GAAG,EAAX;AACAO,IAAAA,KAAK,qBAAcL,MAAM,CAACM,GAArB,kBAAgCN,MAAM,CAACO,GAAvC,EAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,UAAU,IAAI;AAClB,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,UAAU,CAACE,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,cAAME,MAAM,GAAG;AACbR,UAAAA,GAAG,EAAEK,UAAU,CAACC,CAAD,CAAV,CAAcG,WAAd,CAA0BC,QADlB;AAEbT,UAAAA,GAAG,EAAEI,UAAU,CAACC,CAAD,CAAV,CAAcG,WAAd,CAA0BE;AAFlB,SAAf;AAIAnB,QAAAA,IAAI,CAACoB,IAAL,CAAUJ,MAAV;AACD;;AACD,WAAKK,QAAL,CAAc;AACZrB,QAAAA,IAAI,EAAEA;AADM,OAAd;AAGD,KAbH;AAcD;;AAEDsB,EAAAA,MAAM,GAAG;AACP,UAAMpB,MAAM,GAAGT,WAAW,CAACU,KAAZ,CAAkBC,MAAM,CAACC,QAAP,CAAgBC,MAAlC,CAAf;AADO,UAECN,IAFD,GAEU,KAAKD,KAFf,CAECC,IAFD;AAGP,WAAO,CAAC,CAACA,IAAI,CAACe,MAAP,GACL,oBAAC,OAAD;AACE,MAAA,MAAM,EAAE;AAAEP,QAAAA,GAAG,EAAEN,MAAM,CAACM,GAAd;AAAmBC,QAAAA,GAAG,EAAEP,MAAM,CAACO;AAA/B,OADV;AAEE,MAAA,IAAI,EAAE,EAFR;AAGE,MAAA,SAAS,EAAET,IAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,GAOL;AACE,MAAA,KAAK,EAAE;AACLuB,QAAAA,MAAM,EAAE,QADH;AAELC,QAAAA,OAAO,EAAE,MAFJ;AAGLC,QAAAA,cAAc,EAAE;AAHX,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPF,CAPF;AAiBD;;AAhDkC;;AAmDrC,eAAe7B,YAAf","sourcesContent":["import React, { Component } from 'react'\nimport Heatmap from './Heatmap'\nimport queryString from 'query-string'\nconst axios = require('axios')\n// const { YELP_TOKEN, mapsKey } = require(\"../config.json\");\n\nclass BubbleTeaMap extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      // default lat lng to NYC BABY\n      data: [],\n    }\n  }\n\n  componentDidMount() {\n    const values = queryString.parse(window.location.search)\n    let data = []\n    fetch(`/yelp?lat=${values.lat}&lng=${values.lng}`)\n      .then(res => res.json())\n      .then(businesses => {\n        for (let i = 0; i < businesses.length; i++) {\n          const latLng = {\n            lat: businesses[i].coordinates.latitude,\n            lng: businesses[i].coordinates.longitude,\n          }\n          data.push(latLng)\n        }\n        this.setState({\n          data: data,\n        })\n      })\n  }\n\n  render() {\n    const values = queryString.parse(window.location.search)\n    const { data } = this.state\n    return !!data.length ? (\n      <Heatmap\n        center={{ lat: values.lat, lng: values.lng }}\n        zoom={12}\n        positions={data}\n      />\n    ) : (\n      <div\n        style={{\n          height: '1000px',\n          display: 'flex',\n          justifyContent: 'center',\n        }}\n      >\n        <h1> Loading </h1>\n      </div>\n    )\n  }\n}\n\nexport default BubbleTeaMap\n"]},"metadata":{},"sourceType":"module"}