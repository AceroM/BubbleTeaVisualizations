{"ast":null,"code":"import _defineProperty from\"/Users/miguel/DataVisualization/BubbleTeaVisualizations/backend/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/miguel/DataVisualization/BubbleTeaVisualizations/backend/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/miguel/DataVisualization/BubbleTeaVisualizations/backend/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/miguel/DataVisualization/BubbleTeaVisualizations/backend/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/miguel/DataVisualization/BubbleTeaVisualizations/backend/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/miguel/DataVisualization/BubbleTeaVisualizations/backend/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{Redirect}from'react-router-dom';import PlacesAutocomplete,{geocodeByAddress,getLatLng}from'react-places-autocomplete';import'../pages/Homepage/Homepage.scss';var LocationSearchInput=/*#__PURE__*/function(_React$Component){_inherits(LocationSearchInput,_React$Component);function LocationSearchInput(props){var _this;_classCallCheck(this,LocationSearchInput);_this=_possibleConstructorReturn(this,_getPrototypeOf(LocationSearchInput).call(this,props));_this.handleChange=function(address){_this.setState({address:address});};_this.handleSelect=function(address){geocodeByAddress(address).then(function(results){return getLatLng(results[0]);}).then(function(latLng){_this.setState({isRedirect:true,lat:latLng.lat,lng:latLng.lng});}).catch(function(error){return console.error('Error',error);});};_this.state={address:'',isRedirect:false,lat:'',lng:''};return _this;}_createClass(LocationSearchInput,[{key:\"render\",value:function render(){var isRedirect=this.state.isRedirect;if(isRedirect){var _this$state=this.state,lat=_this$state.lat,lng=_this$state.lng;var str=\"/map?lat=\".concat(lat,\"&lng=\").concat(lng);return React.createElement(Redirect,{to:str});}return React.createElement(PlacesAutocomplete,{value:this.state.address,onChange:this.handleChange,onSelect:this.handleSelect},function(_ref){var getInputProps=_ref.getInputProps,suggestions=_ref.suggestions,getSuggestionItemProps=_ref.getSuggestionItemProps,loading=_ref.loading;return React.createElement(\"div\",null,React.createElement(\"input\",Object.assign({className:\"input-group-field\",placeholder:\"Enter your location\",name:\"location\"},getInputProps(_defineProperty({className:'input-group-field',name:'location',placeholder:'Search Places ...'},\"className\",'location-search-input input-group-field')))),React.createElement(\"div\",{className:\"autocomplete-dropdown-container\"},loading&&React.createElement(\"div\",null,\"Loading...\"),suggestions.map(function(suggestion){var className=suggestion.active?'suggestion-item--active':'suggestion-item';// inline style for demonstration purpose\nvar style=suggestion.active?{backgroundColor:'#fafafa',cursor:'pointer'}:{backgroundColor:'#ffffff',cursor:'pointer'};return React.createElement(\"div\",getSuggestionItemProps(suggestion,{className:className,style:style}),React.createElement(\"span\",null,suggestion.description));})));});}}]);return LocationSearchInput;}(React.Component);export default LocationSearchInput;","map":{"version":3,"sources":["/Users/miguel/DataVisualization/BubbleTeaVisualizations/backend/frontend/src/components/LocationSearchInput.js"],"names":["React","Redirect","PlacesAutocomplete","geocodeByAddress","getLatLng","LocationSearchInput","props","handleChange","address","setState","handleSelect","then","results","latLng","isRedirect","lat","lng","catch","error","console","state","str","getInputProps","suggestions","getSuggestionItemProps","loading","className","name","placeholder","map","suggestion","active","style","backgroundColor","cursor","description","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete'\nimport '../pages/Homepage/Homepage.scss'\n\nclass LocationSearchInput extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { address: '', isRedirect: false, lat: '', lng: '' }\n  }\n\n  handleChange = address => {\n    this.setState({ address })\n  }\n\n  handleSelect = address => {\n    geocodeByAddress(address)\n      .then(results => getLatLng(results[0]))\n      .then(latLng => {\n        this.setState({\n          isRedirect: true,\n          lat: latLng.lat,\n          lng: latLng.lng,\n        })\n      })\n      .catch(error => console.error('Error', error))\n  }\n\n  render() {\n    const { isRedirect } = this.state\n    if (isRedirect) {\n      const { lat, lng } = this.state\n      const str = `/map?lat=${lat}&lng=${lng}`\n      return <Redirect to={str} />\n    }\n\n    return (\n      <PlacesAutocomplete\n        value={this.state.address}\n        onChange={this.handleChange}\n        onSelect={this.handleSelect}\n      >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n          <div>\n            <input\n              className=\"input-group-field\"\n              placeholder=\"Enter your location\"\n              name=\"location\"\n              {...getInputProps({\n                className: 'input-group-field',\n                name: 'location',\n                placeholder: 'Search Places ...',\n                className: 'location-search-input input-group-field',\n              })}\n            />\n            <div className=\"autocomplete-dropdown-container\">\n              {loading && <div>Loading...</div>}\n              {suggestions.map(suggestion => {\n                const className = suggestion.active\n                  ? 'suggestion-item--active'\n                  : 'suggestion-item'\n                // inline style for demonstration purpose\n                const style = suggestion.active\n                  ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                  : { backgroundColor: '#ffffff', cursor: 'pointer' }\n                return (\n                  <div\n                    {...getSuggestionItemProps(suggestion, {\n                      className,\n                      style,\n                    })}\n                  >\n                    <span>{suggestion.description}</span>\n                  </div>\n                )\n              })}\n            </div>\n          </div>\n        )}\n      </PlacesAutocomplete>\n    )\n  }\n}\n\nexport default LocationSearchInput\n"]},"metadata":{},"sourceType":"module"}