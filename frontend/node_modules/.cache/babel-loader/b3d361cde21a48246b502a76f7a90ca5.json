{"ast":null,"code":"import _slicedToArray from \"/Users/miguel/DataVisualization/BubbleTeaVisualizations/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/miguel/DataVisualization/BubbleTeaVisualizations/frontend/src/components/BubbleTea/Bubbles.js\";\nimport React, { useState, useEffect } from 'react';\n\nconst d3 = require('d3');\n\nconst forceStrength = 0.03;\nconst width = 940;\nconst height = 600;\nconst center = {\n  x: width / 2,\n  y: height / 2\n};\nconst colorFn = d3.scaleLinear().domain([7, 15]).range(['#dcdbe8', '#F0DFC5', '#fbc4a7']);\n\nfunction startSimulation(bubbles, updateState) {\n  function charge(d) {\n    return -Math.pow(d.radius, 2.0) * forceStrength;\n  }\n\n  const simulation = d3.forceSimulation().velocityDecay(0.2).force('x', d3.forceX().strength(forceStrength).x(center.x)).force('y', d3.forceY().strength(forceStrength).y(center.y)).force('charge', d3.forceManyBody().strength(charge)).on('tick', () => updateState(bubbles)).stop();\n  simulation.nodes(bubbles);\n  simulation.alpha(1).restart();\n}\n\nfunction formatBubbleData(rawData) {\n  const maxValue = d3.max(rawData, function (d) {\n    return +d.value;\n  });\n  const radiusScale = d3.scalePow().exponent(0.5).range([2, 85]).domain([0, maxValue]);\n  const myBubbles = rawData.map(d => ({\n    name: d.name,\n    value: d.value,\n    radius: radiusScale(d.value),\n    x: Math.random() * width,\n    y: Math.random() * height\n  })); // sort them to prevent occlusion of smaller nodes.\n\n  myBubbles.sort(function (a, b) {\n    return b.value - a.value;\n  });\n  return myBubbles;\n}\n\nexport default function Bubbles({\n  data\n}) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        bubbles = _useState2[0],\n        setBubbles = _useState2[1];\n\n  useEffect(() => {\n    startSimulation(formatBubbleData(data), bubbles => {\n      setBubbles(() => [...bubbles]);\n    });\n  }, [data]);\n  return React.createElement(\"svg\", {\n    className: \"bubbles\",\n    width: width,\n    height: height,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, bubbles.map(bubble => {\n    return React.createElement(\"circle\", {\n      key: bubble.name,\n      r: bubble.radius,\n      fill: colorFn(bubble.value),\n      stroke: d3.rgb(colorFn(bubble.value)).darker(),\n      strokeWidth: 2,\n      cx: bubble.x,\n      cy: bubble.y,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, bubble.name));\n  }));\n}","map":{"version":3,"sources":["/Users/miguel/DataVisualization/BubbleTeaVisualizations/frontend/src/components/BubbleTea/Bubbles.js"],"names":["React","useState","useEffect","d3","require","forceStrength","width","height","center","x","y","colorFn","scaleLinear","domain","range","startSimulation","bubbles","updateState","charge","d","Math","pow","radius","simulation","forceSimulation","velocityDecay","force","forceX","strength","forceY","forceManyBody","on","stop","nodes","alpha","restart","formatBubbleData","rawData","maxValue","max","value","radiusScale","scalePow","exponent","myBubbles","map","name","random","sort","a","b","Bubbles","data","setBubbles","bubble","rgb","darker"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AAEA,MAAMC,aAAa,GAAG,IAAtB;AAEA,MAAMC,KAAK,GAAG,GAAd;AACA,MAAMC,MAAM,GAAG,GAAf;AACA,MAAMC,MAAM,GAAG;AAAEC,EAAAA,CAAC,EAAEH,KAAK,GAAG,CAAb;AAAgBI,EAAAA,CAAC,EAAEH,MAAM,GAAG;AAA5B,CAAf;AAEA,MAAMI,OAAO,GAAGR,EAAE,CACfS,WADa,GAEbC,MAFa,CAEN,CAAC,CAAD,EAAI,EAAJ,CAFM,EAGbC,KAHa,CAGP,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,CAHO,CAAhB;;AAKA,SAASC,eAAT,CAAyBC,OAAzB,EAAkCC,WAAlC,EAA+C;AAC7C,WAASC,MAAT,CAAgBC,CAAhB,EAAmB;AACjB,WAAO,CAACC,IAAI,CAACC,GAAL,CAASF,CAAC,CAACG,MAAX,EAAmB,GAAnB,CAAD,GAA2BjB,aAAlC;AACD;;AAED,QAAMkB,UAAU,GAAGpB,EAAE,CAClBqB,eADgB,GAEhBC,aAFgB,CAEF,GAFE,EAGhBC,KAHgB,CAIf,GAJe,EAKfvB,EAAE,CACCwB,MADH,GAEGC,QAFH,CAEYvB,aAFZ,EAGGI,CAHH,CAGKD,MAAM,CAACC,CAHZ,CALe,EAUhBiB,KAVgB,CAWf,GAXe,EAYfvB,EAAE,CACC0B,MADH,GAEGD,QAFH,CAEYvB,aAFZ,EAGGK,CAHH,CAGKF,MAAM,CAACE,CAHZ,CAZe,EAiBhBgB,KAjBgB,CAiBV,QAjBU,EAiBAvB,EAAE,CAAC2B,aAAH,GAAmBF,QAAnB,CAA4BV,MAA5B,CAjBA,EAkBhBa,EAlBgB,CAkBb,MAlBa,EAkBL,MAAMd,WAAW,CAACD,OAAD,CAlBZ,EAmBhBgB,IAnBgB,EAAnB;AAqBAT,EAAAA,UAAU,CAACU,KAAX,CAAiBjB,OAAjB;AACAO,EAAAA,UAAU,CAACW,KAAX,CAAiB,CAAjB,EAAoBC,OAApB;AACD;;AAED,SAASC,gBAAT,CAA0BC,OAA1B,EAAmC;AACjC,QAAMC,QAAQ,GAAGnC,EAAE,CAACoC,GAAH,CAAOF,OAAP,EAAgB,UAASlB,CAAT,EAAY;AAC3C,WAAO,CAACA,CAAC,CAACqB,KAAV;AACD,GAFgB,CAAjB;AAIA,QAAMC,WAAW,GAAGtC,EAAE,CACnBuC,QADiB,GAEjBC,QAFiB,CAER,GAFQ,EAGjB7B,KAHiB,CAGX,CAAC,CAAD,EAAI,EAAJ,CAHW,EAIjBD,MAJiB,CAIV,CAAC,CAAD,EAAIyB,QAAJ,CAJU,CAApB;AAMA,QAAMM,SAAS,GAAGP,OAAO,CAACQ,GAAR,CAAY1B,CAAC,KAAK;AAClC2B,IAAAA,IAAI,EAAE3B,CAAC,CAAC2B,IAD0B;AAElCN,IAAAA,KAAK,EAAErB,CAAC,CAACqB,KAFyB;AAGlClB,IAAAA,MAAM,EAAEmB,WAAW,CAACtB,CAAC,CAACqB,KAAH,CAHe;AAIlC/B,IAAAA,CAAC,EAAEW,IAAI,CAAC2B,MAAL,KAAgBzC,KAJe;AAKlCI,IAAAA,CAAC,EAAEU,IAAI,CAAC2B,MAAL,KAAgBxC;AALe,GAAL,CAAb,CAAlB,CAXiC,CAmBjC;;AACAqC,EAAAA,SAAS,CAACI,IAAV,CAAe,UAASC,CAAT,EAAYC,CAAZ,EAAe;AAC5B,WAAOA,CAAC,CAACV,KAAF,GAAUS,CAAC,CAACT,KAAnB;AACD,GAFD;AAIA,SAAOI,SAAP;AACD;;AAED,eAAe,SAASO,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA2B;AAAA,oBACVnD,QAAQ,CAAC,EAAD,CADE;AAAA;AAAA,QACjCe,OADiC;AAAA,QACxBqC,UADwB;;AAGxCnD,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,eAAe,CAACqB,gBAAgB,CAACgB,IAAD,CAAjB,EAAyBpC,OAAO,IAAI;AACjDqC,MAAAA,UAAU,CAAC,MAAM,CAAC,GAAGrC,OAAJ,CAAP,CAAV;AACD,KAFc,CAAf;AAGD,GAJQ,EAIN,CAACoC,IAAD,CAJM,CAAT;AAMA,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,KAAK,EAAE9C,KAAhC;AAAuC,IAAA,MAAM,EAAEC,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGS,OAAO,CAAC6B,GAAR,CAAYS,MAAM,IAAI;AACrB,WACE;AACE,MAAA,GAAG,EAAEA,MAAM,CAACR,IADd;AAEE,MAAA,CAAC,EAAEQ,MAAM,CAAChC,MAFZ;AAGE,MAAA,IAAI,EAAEX,OAAO,CAAC2C,MAAM,CAACd,KAAR,CAHf;AAIE,MAAA,MAAM,EAAErC,EAAE,CAACoD,GAAH,CAAO5C,OAAO,CAAC2C,MAAM,CAACd,KAAR,CAAd,EAA8BgB,MAA9B,EAJV;AAKE,MAAA,WAAW,EAAE,CALf;AAME,MAAA,EAAE,EAAEF,MAAM,CAAC7C,CANb;AAOE,MAAA,EAAE,EAAE6C,MAAM,CAAC5C,CAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ4C,MAAM,CAACR,IAAf,CATF,CADF;AAaD,GAdA,CADH,CADF;AAmBD","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nconst d3 = require('d3')\n\nconst forceStrength = 0.03\n\nconst width = 940\nconst height = 600\nconst center = { x: width / 2, y: height / 2 }\n\nconst colorFn = d3\n  .scaleLinear()\n  .domain([7, 15])\n  .range(['#dcdbe8', '#F0DFC5', '#fbc4a7'])\n\nfunction startSimulation(bubbles, updateState) {\n  function charge(d) {\n    return -Math.pow(d.radius, 2.0) * forceStrength\n  }\n\n  const simulation = d3\n    .forceSimulation()\n    .velocityDecay(0.2)\n    .force(\n      'x',\n      d3\n        .forceX()\n        .strength(forceStrength)\n        .x(center.x)\n    )\n    .force(\n      'y',\n      d3\n        .forceY()\n        .strength(forceStrength)\n        .y(center.y)\n    )\n    .force('charge', d3.forceManyBody().strength(charge))\n    .on('tick', () => updateState(bubbles))\n    .stop()\n\n  simulation.nodes(bubbles)\n  simulation.alpha(1).restart()\n}\n\nfunction formatBubbleData(rawData) {\n  const maxValue = d3.max(rawData, function(d) {\n    return +d.value\n  })\n\n  const radiusScale = d3\n    .scalePow()\n    .exponent(0.5)\n    .range([2, 85])\n    .domain([0, maxValue])\n\n  const myBubbles = rawData.map(d => ({\n    name: d.name,\n    value: d.value,\n    radius: radiusScale(d.value),\n    x: Math.random() * width,\n    y: Math.random() * height,\n  }))\n\n  // sort them to prevent occlusion of smaller nodes.\n  myBubbles.sort(function(a, b) {\n    return b.value - a.value\n  })\n\n  return myBubbles\n}\n\nexport default function Bubbles({ data }) {\n  const [bubbles, setBubbles] = useState([])\n\n  useEffect(() => {\n    startSimulation(formatBubbleData(data), bubbles => {\n      setBubbles(() => [...bubbles])\n    })\n  }, [data])\n\n  return (\n    <svg className=\"bubbles\" width={width} height={height}>\n      {bubbles.map(bubble => {\n        return (\n          <circle\n            key={bubble.name}\n            r={bubble.radius}\n            fill={colorFn(bubble.value)}\n            stroke={d3.rgb(colorFn(bubble.value)).darker()}\n            strokeWidth={2}\n            cx={bubble.x}\n            cy={bubble.y}\n          >\n            <title>{bubble.name}</title>\n          </circle>\n        )\n      })}\n    </svg>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}