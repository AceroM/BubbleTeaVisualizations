{"ast":null,"code":"var _jsxFileName = \"/Users/miguel/DataVisualization/BubbleTeaVisualizations/frontend/src/components/BubbleTeaMap.js\";\nimport React, { Component } from 'react';\nimport Heatmap from './Heatmap';\nimport queryString from 'query-string';\n\nconst axios = require(\"axios\"); // const { YELP_TOKEN, mapsKey } = require(\"../config.json\");\n\n\nclass BubbleTeaMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // default lat lng to NYC BABY\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    const values = queryString.parse(window.location.search);\n    let data = [];\n    fetch(\"/yelp?lat=\".concat(values.lat, \"&lng=\").concat(values.lng)).then(res => res.json()).then(businesses => {\n      for (let i = 0; i < businesses.length; i++) {\n        const latLng = {\n          lat: businesses[i].coordinates.latitude,\n          lng: businesses[i].coordinates.longitude\n        };\n        data.push(latLng);\n      }\n\n      ;\n      this.setState({\n        data: data\n      });\n    });\n  }\n\n  render() {\n    const values = queryString.parse(window.location.search);\n    const data = this.state.data;\n    return !!data.length ? React.createElement(Heatmap, {\n      center: {\n        lat: values.lat,\n        lng: values.lng\n      },\n      zoom: 12,\n      positions: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }) : \"Loading\";\n  }\n\n}\n\nexport default BubbleTeaMap;","map":{"version":3,"sources":["/Users/miguel/DataVisualization/BubbleTeaVisualizations/frontend/src/components/BubbleTeaMap.js"],"names":["React","Component","Heatmap","queryString","axios","require","BubbleTeaMap","constructor","props","state","data","componentDidMount","values","parse","window","location","search","fetch","lat","lng","then","res","json","businesses","i","length","latLng","coordinates","latitude","longitude","push","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,cAAxB;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB,C,CACA;;;AAEA,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AACjCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACT;AACAC,MAAAA,IAAI,EAAE;AAFG,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,MAAM,GAAGT,WAAW,CAACU,KAAZ,CAAkBC,MAAM,CAACC,QAAP,CAAgBC,MAAlC,CAAf;AACA,QAAIN,IAAI,GAAG,EAAX;AACAO,IAAAA,KAAK,qBAAcL,MAAM,CAACM,GAArB,kBAAgCN,MAAM,CAACO,GAAvC,EAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAGQG,UAAU,IAAI;AACV,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,UAAU,CAACE,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxC,cAAME,MAAM,GAAG;AACXR,UAAAA,GAAG,EAAEK,UAAU,CAACC,CAAD,CAAV,CAAcG,WAAd,CAA0BC,QADpB;AAEXT,UAAAA,GAAG,EAAEI,UAAU,CAACC,CAAD,CAAV,CAAcG,WAAd,CAA0BE;AAFpB,SAAf;AAIAnB,QAAAA,IAAI,CAACoB,IAAL,CAAUJ,MAAV;AACH;;AAAA;AACD,WAAKK,QAAL,CAAc;AACVrB,QAAAA,IAAI,EAAEA;AADI,OAAd;AAGH,KAdT;AAgBD;;AAEHsB,EAAAA,MAAM,GAAG;AACL,UAAMpB,MAAM,GAAGT,WAAW,CAACU,KAAZ,CAAkBC,MAAM,CAACC,QAAP,CAAgBC,MAAlC,CAAf;AADK,UAEGN,IAFH,GAEY,KAAKD,KAFjB,CAEGC,IAFH;AAGL,WACK,CAAC,CAACA,IAAI,CAACe,MAAR,GACA,oBAAC,OAAD;AACI,MAAA,MAAM,EAAE;AAAEP,QAAAA,GAAG,EAAEN,MAAM,CAACM,GAAd;AAAmBC,QAAAA,GAAG,EAAEP,MAAM,CAACO;AAA/B,OADZ;AAEI,MAAA,IAAI,EAAE,EAFV;AAGI,MAAA,SAAS,EAAET,IAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,GAMI,SAPR;AASH;;AA1CgC;;AA6CrC,eAAeJ,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport Heatmap from './Heatmap';\nimport queryString from 'query-string';\nconst axios = require(\"axios\");\n// const { YELP_TOKEN, mapsKey } = require(\"../config.json\");\n\nclass BubbleTeaMap extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // default lat lng to NYC BABY\n            data: []\n        }\n    }\n\n    componentDidMount() {\n        const values = queryString.parse(window.location.search);\n        let data = []\n        fetch(`/yelp?lat=${values.lat}&lng=${values.lng}`)\n            .then(res => res.json())\n            .then(\n                businesses => {\n                    for (let i = 0; i < businesses.length; i++) {\n                        const latLng = {\n                            lat: businesses[i].coordinates.latitude,\n                            lng: businesses[i].coordinates.longitude\n                        }\n                        data.push(latLng)\n                    };\n                    this.setState({\n                        data: data\n                    });\n                }\n            )\n      }\n\n    render() {\n        const values = queryString.parse(window.location.search);\n        const { data } = this.state;\n        return (\n            (!!data.length) ? (\n            <Heatmap \n                center={{ lat: values.lat, lng: values.lng }}\n                zoom={12}\n                positions={data} \n            />\n            ) : \"Loading\"\n        )\n    }\n}\n\nexport default BubbleTeaMap;"]},"metadata":{},"sourceType":"module"}