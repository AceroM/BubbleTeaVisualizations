{"ast":null,"code":"import _classCallCheck from\"/Users/miguel/DataVisualization/BubbleTeaVisualizations/backend/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/miguel/DataVisualization/BubbleTeaVisualizations/backend/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/miguel/DataVisualization/BubbleTeaVisualizations/backend/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/miguel/DataVisualization/BubbleTeaVisualizations/backend/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/miguel/DataVisualization/BubbleTeaVisualizations/backend/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Heatmap from'./Heatmap';import queryString from'query-string';var axios=require('axios');// const { YELP_TOKEN, mapsKey } = require(\"../config.json\");\nvar BubbleTeaMap=/*#__PURE__*/function(_Component){_inherits(BubbleTeaMap,_Component);function BubbleTeaMap(props){var _this;_classCallCheck(this,BubbleTeaMap);_this=_possibleConstructorReturn(this,_getPrototypeOf(BubbleTeaMap).call(this,props));_this.state={// default lat lng to NYC BABY\ndata:[]};return _this;}_createClass(BubbleTeaMap,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var values=queryString.parse(window.location.search);var data=[];fetch(\"/yelp?lat=\".concat(values.lat,\"&lng=\").concat(values.lng)).then(function(res){return res.json();}).then(function(businesses){for(var i=0;i<businesses.length;i++){var latLng={lat:businesses[i].coordinates.latitude,lng:businesses[i].coordinates.longitude};data.push(latLng);}_this2.setState({data:data});});}},{key:\"render\",value:function render(){var values=queryString.parse(window.location.search);var data=this.state.data;return!!data.length?React.createElement(Heatmap,{center:{lat:values.lat,lng:values.lng},zoom:12,positions:data}):React.createElement(\"div\",{style:{height:'1000px',display:'flex',justifyContent:'center'}},React.createElement(\"h1\",null,\" Loading \"));}}]);return BubbleTeaMap;}(Component);export default BubbleTeaMap;","map":{"version":3,"sources":["/Users/miguel/DataVisualization/BubbleTeaVisualizations/backend/frontend/src/components/BubbleTeaMap.js"],"names":["React","Component","Heatmap","queryString","axios","require","BubbleTeaMap","props","state","data","values","parse","window","location","search","fetch","lat","lng","then","res","json","businesses","i","length","latLng","coordinates","latitude","longitude","push","setState","height","display","justifyContent"],"mappings":"qxBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,WAAP,KAAwB,cAAxB,CACA,GAAMC,CAAAA,KAAK,CAAGC,OAAO,CAAC,OAAD,CAArB,CACA;GAEMC,CAAAA,Y,sEACJ,sBAAYC,KAAZ,CAAmB,8CACjB,8EAAMA,KAAN,GACA,MAAKC,KAAL,CAAa,CACX;AACAC,IAAI,CAAE,EAFK,CAAb,CAFiB,aAMlB,C,sFAEmB,iBAClB,GAAMC,CAAAA,MAAM,CAAGP,WAAW,CAACQ,KAAZ,CAAkBC,MAAM,CAACC,QAAP,CAAgBC,MAAlC,CAAf,CACA,GAAIL,CAAAA,IAAI,CAAG,EAAX,CACAM,KAAK,qBAAcL,MAAM,CAACM,GAArB,iBAAgCN,MAAM,CAACO,GAAvC,EAAL,CACGC,IADH,CACQ,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EADX,EAEGF,IAFH,CAEQ,SAAAG,UAAU,CAAI,CAClB,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGD,UAAU,CAACE,MAA/B,CAAuCD,CAAC,EAAxC,CAA4C,CAC1C,GAAME,CAAAA,MAAM,CAAG,CACbR,GAAG,CAAEK,UAAU,CAACC,CAAD,CAAV,CAAcG,WAAd,CAA0BC,QADlB,CAEbT,GAAG,CAAEI,UAAU,CAACC,CAAD,CAAV,CAAcG,WAAd,CAA0BE,SAFlB,CAAf,CAIAlB,IAAI,CAACmB,IAAL,CAAUJ,MAAV,EACD,CACD,MAAI,CAACK,QAAL,CAAc,CACZpB,IAAI,CAAEA,IADM,CAAd,EAGD,CAbH,EAcD,C,uCAEQ,CACP,GAAMC,CAAAA,MAAM,CAAGP,WAAW,CAACQ,KAAZ,CAAkBC,MAAM,CAACC,QAAP,CAAgBC,MAAlC,CAAf,CADO,GAECL,CAAAA,IAFD,CAEU,KAAKD,KAFf,CAECC,IAFD,CAGP,MAAO,CAAC,CAACA,IAAI,CAACc,MAAP,CACL,oBAAC,OAAD,EACE,MAAM,CAAE,CAAEP,GAAG,CAAEN,MAAM,CAACM,GAAd,CAAmBC,GAAG,CAAEP,MAAM,CAACO,GAA/B,CADV,CAEE,IAAI,CAAE,EAFR,CAGE,SAAS,CAAER,IAHb,EADK,CAOL,2BACE,KAAK,CAAE,CACLqB,MAAM,CAAE,QADH,CAELC,OAAO,CAAE,MAFJ,CAGLC,cAAc,CAAE,QAHX,CADT,EAOE,0CAPF,CAPF,CAiBD,C,0BAhDwB/B,S,EAmD3B,cAAeK,CAAAA,YAAf","sourcesContent":["import React, { Component } from 'react'\nimport Heatmap from './Heatmap'\nimport queryString from 'query-string'\nconst axios = require('axios')\n// const { YELP_TOKEN, mapsKey } = require(\"../config.json\");\n\nclass BubbleTeaMap extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      // default lat lng to NYC BABY\n      data: [],\n    }\n  }\n\n  componentDidMount() {\n    const values = queryString.parse(window.location.search)\n    let data = []\n    fetch(`/yelp?lat=${values.lat}&lng=${values.lng}`)\n      .then(res => res.json())\n      .then(businesses => {\n        for (let i = 0; i < businesses.length; i++) {\n          const latLng = {\n            lat: businesses[i].coordinates.latitude,\n            lng: businesses[i].coordinates.longitude,\n          }\n          data.push(latLng)\n        }\n        this.setState({\n          data: data,\n        })\n      })\n  }\n\n  render() {\n    const values = queryString.parse(window.location.search)\n    const { data } = this.state\n    return !!data.length ? (\n      <Heatmap\n        center={{ lat: values.lat, lng: values.lng }}\n        zoom={12}\n        positions={data}\n      />\n    ) : (\n      <div\n        style={{\n          height: '1000px',\n          display: 'flex',\n          justifyContent: 'center',\n        }}\n      >\n        <h1> Loading </h1>\n      </div>\n    )\n  }\n}\n\nexport default BubbleTeaMap\n"]},"metadata":{},"sourceType":"module"}