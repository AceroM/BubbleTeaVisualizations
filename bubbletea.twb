<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0818.2120                               -->
<workbook original-version='18.1' source-build='2019.2.3 (20192.19.0818.2120)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='full_city_tea' inline='true' name='federated.01krj5n0tx1bh410v9i4q0kpho1p' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='full_city_tea' name='semistructpassivestore-direct.1pukcyo1llc2421c8217b1lpjhdl'>
            <connection class='semistructpassivestore-direct' directory='/Users/angelalim/Desktop/BubbleTeaVisualizations/data/nyc' filename='full_city_tea.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[full_city_tea.json]'>
                  <map key='categories' value='true' />
                  <map key='categories.Value' value='true' />
                  <map key='coordinates' value='true' />
                  <map key='location' value='false' />
                  <map key='location.display_address' value='false' />
                  <map key='transactions' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.1pukcyo1llc2421c8217b1lpjhdl' name='full_city_tea.json' table='[full_city_tea.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[full_city_tea.json].[Document Index (generated)]' />
          <map key='[alias (categories)]' value='[full_city_tea.json].[categories.Value.alias]' />
          <map key='[alias]' value='[full_city_tea.json].[alias]' />
          <map key='[categories Index (generated)]' value='[full_city_tea.json].[categories.Index (generated)]' />
          <map key='[display_phone]' value='[full_city_tea.json].[display_phone]' />
          <map key='[distance]' value='[full_city_tea.json].[distance]' />
          <map key='[id]' value='[full_city_tea.json].[id]' />
          <map key='[image_url]' value='[full_city_tea.json].[image_url]' />
          <map key='[is_closed]' value='[full_city_tea.json].[is_closed]' />
          <map key='[latitude]' value='[full_city_tea.json].[coordinates.latitude]' />
          <map key='[longitude]' value='[full_city_tea.json].[coordinates.longitude]' />
          <map key='[name]' value='[full_city_tea.json].[name]' />
          <map key='[phone]' value='[full_city_tea.json].[phone]' />
          <map key='[price]' value='[full_city_tea.json].[price]' />
          <map key='[rating]' value='[full_city_tea.json].[rating]' />
          <map key='[review_count]' value='[full_city_tea.json].[review_count]' />
          <map key='[title]' value='[full_city_tea.json].[categories.Value.title]' />
          <map key='[transactions Index (generated)]' value='[full_city_tea.json].[transactions.Index (generated)]' />
          <map key='[transactions]' value='[full_city_tea.json].[transactions.Value]' />
          <map key='[url]' value='[full_city_tea.json].[url]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[full_city_tea.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>alias</remote-name>
            <remote-type>130</remote-type>
            <local-name>[alias]</local-name>
            <parent-name>[full_city_tea.json]</parent-name>
            <remote-alias>alias</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>categories.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[categories Index (generated)]</local-name>
            <parent-name>[full_city_tea.json]</parent-name>
            <remote-alias>categories.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>categories.Value.alias</remote-name>
            <remote-type>130</remote-type>
            <local-name>[alias (categories)]</local-name>
            <parent-name>[full_city_tea.json]</parent-name>
            <remote-alias>categories.Value.alias</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>categories.Value.title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[full_city_tea.json]</parent-name>
            <remote-alias>categories.Value.title</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coordinates.latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[full_city_tea.json]</parent-name>
            <remote-alias>coordinates.latitude</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coordinates.longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[full_city_tea.json]</parent-name>
            <remote-alias>coordinates.longitude</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>display_phone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[display_phone]</local-name>
            <parent-name>[full_city_tea.json]</parent-name>
            <remote-alias>display_phone</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distance</remote-name>
            <remote-type>5</remote-type>
            <local-name>[distance]</local-name>
            <parent-name>[full_city_tea.json]</parent-name>
            <remote-alias>distance</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[full_city_tea.json]</parent-name>
            <remote-alias>id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>image_url</remote-name>
            <remote-type>130</remote-type>
            <local-name>[image_url]</local-name>
            <parent-name>[full_city_tea.json]</parent-name>
            <remote-alias>image_url</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_closed</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_closed]</local-name>
            <parent-name>[full_city_tea.json]</parent-name>
            <remote-alias>is_closed</remote-alias>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[full_city_tea.json]</parent-name>
            <remote-alias>name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>phone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[phone]</local-name>
            <parent-name>[full_city_tea.json]</parent-name>
            <remote-alias>phone</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>130</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[full_city_tea.json]</parent-name>
            <remote-alias>price</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[full_city_tea.json]</parent-name>
            <remote-alias>rating</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_count</remote-name>
            <remote-type>5</remote-type>
            <local-name>[review_count]</local-name>
            <parent-name>[full_city_tea.json]</parent-name>
            <remote-alias>review_count</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>transactions.Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[transactions Index (generated)]</local-name>
            <parent-name>[full_city_tea.json]</parent-name>
            <remote-alias>transactions.Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>transactions.Value</remote-name>
            <remote-type>130</remote-type>
            <local-name>[transactions]</local-name>
            <parent-name>[full_city_tea.json]</parent-name>
            <remote-alias>transactions.Value</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>url</remote-name>
            <remote-type>130</remote-type>
            <local-name>[url]</local-name>
            <parent-name>[full_city_tea.json]</parent-name>
            <remote-alias>url</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' is-auto-gen-lod-field='true' name='[Distance per Document]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([distance]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at Document level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' datatype='real' is-auto-gen-lod-field='true' name='[Latitude per coordinates]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([latitude]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at coordinates level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' datatype='real' is-auto-gen-lod-field='true' name='[Longitude per coordinates]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([longitude]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at coordinates level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per categories]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([categories Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at categories level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per full_city_tea.json]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Document Index (generated)])' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at full_city_tea.json level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' is-auto-gen-lod-field='true' name='[Number of Records per transactions]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [Document Index (generated)] : COUNTD([transactions Index (generated)]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at transactions level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Rating per Document]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([rating]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at Document level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='real' is-auto-gen-lod-field='true' name='[Review Count per Document]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([review_count]) }' />
        <desc>
          <formatted-text>
            <run>A calculated measure that is at Document level of detail</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Alias (Categories)' datatype='string' name='[alias (categories)]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>categories.Value.alias</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Alias' datatype='string' name='[alias]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>alias</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[categories Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>categories.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Display Phone' datatype='string' name='[display_phone]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>display_phone</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Distance' datatype='real' name='[distance]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>distance</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Image Url' datatype='string' name='[image_url]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>image_url</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Is Closed' datatype='boolean' name='[is_closed]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>is_closed</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
        <desc>
          <formatted-text>
            <run>coordinates.latitude</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
        <desc>
          <formatted-text>
            <run>coordinates.longitude</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Phone' datatype='string' name='[phone]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>phone</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Price' datatype='string' name='[price]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>price</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Rating' datatype='real' name='[rating]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>rating</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Review Count' datatype='real' name='[review_count]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>review_count</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>categories.Value.title</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Sum' datatype='integer' name='[transactions Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>transactions.Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Transactions' datatype='string' name='[transactions]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>transactions.Value</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Url' datatype='string' name='[url]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>url</run>
          </formatted-text>
        </desc>
      </column>
      <column-instance column='[price]' derivation='None' name='[none:price:nk]' pivot='key' type='nominal' />
      <folder name='Categories' role='dimensions'>
        <folder-item name='[alias (categories)]' type='field' />
        <folder-item name='[categories Index (generated)]' type='field' />
        <folder-item name='[title]' type='field' />
      </folder>
      <folder name='Full City Tea' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
        <folder-item name='[alias]' type='field' />
        <folder-item name='[display_phone]' type='field' />
        <folder-item name='[id]' type='field' />
        <folder-item name='[image_url]' type='field' />
        <folder-item name='[is_closed]' type='field' />
        <folder-item name='[name]' type='field' />
        <folder-item name='[phone]' type='field' />
        <folder-item name='[price]' type='field' />
        <folder-item name='[transactions Index (generated)]' type='field' />
        <folder-item name='[transactions]' type='field' />
        <folder-item name='[url]' type='field' />
      </folder>
      <folder name='Source Measures' role='measures'>
        <folder-item name='[distance]' type='field' />
        <folder-item name='[latitude]' type='field' />
        <folder-item name='[longitude]' type='field' />
        <folder-item name='[rating]' type='field' />
        <folder-item name='[review_count]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.604203' measure-ordering='alphabetic' measure-percentage='0.395797' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:price:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;$$&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;$&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Bubble Tea Places vs Price'>
      <table>
        <view>
          <datasources>
            <datasource caption='full_city_tea' name='federated.01krj5n0tx1bh410v9i4q0kpho1p' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01krj5n0tx1bh410v9i4q0kpho1p'>
            <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
              <desc>
                <formatted-text>
                  <run>Document Index (generated)</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Avg' datatype='real' is-auto-gen-lod-field='true' name='[Latitude per coordinates]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([latitude]) }' />
              <desc>
                <formatted-text>
                  <run>A calculated measure that is at coordinates level of detail</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Avg' datatype='real' is-auto-gen-lod-field='true' name='[Longitude per coordinates]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Document Index (generated)] : MAX([longitude]) }' />
              <desc>
                <formatted-text>
                  <run>A calculated measure that is at coordinates level of detail</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Latitude per coordinates]' derivation='Avg' name='[avg:Latitude per coordinates:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude per coordinates]' derivation='Avg' name='[avg:Longitude per coordinates:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>coordinates.latitude</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>coordinates.longitude</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>name</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[price]' derivation='None' name='[none:price:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='string' name='[price]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>price</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.01krj5n0tx1bh410v9i4q0kpho1p].[avg:Longitude per coordinates:qk]' field-type='quantitative' max='-8229733.1743874904' min='-8237625.64650709' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.01krj5n0tx1bh410v9i4q0kpho1p].[avg:Latitude per coordinates:qk]' field-type='quantitative' max='4973455.8742940016' min='4968470.6857715044' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01krj5n0tx1bh410v9i4q0kpho1p].[none:price:nk]' />
              <lod column='[federated.01krj5n0tx1bh410v9i4q0kpho1p].[none:name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.01krj5n0tx1bh410v9i4q0kpho1p].[avg:Latitude per coordinates:qk]</rows>
        <cols>[federated.01krj5n0tx1bh410v9i4q0kpho1p].[avg:Longitude per coordinates:qk]</cols>
      </table>
      <simple-id uuid='{1810D3D3-00D3-409F-BE71-1AC6154F6AEE}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Bubble Tea Places vs Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.01krj5n0tx1bh410v9i4q0kpho1p].[none:price:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01krj5n0tx1bh410v9i4q0kpho1p].[none:name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{1C64A694-1177-494C-BAAC-FFEBD05C571C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bubble Tea Places vs Price' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
